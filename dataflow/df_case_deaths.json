{
	"name": "df_case_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_case_death_df",
						"type": "DatasetReference"
					},
					"name": "sourceFileCaseDeaths"
				},
				{
					"dataset": {
						"referenceName": "ds_country_code",
						"type": "DatasetReference"
					},
					"name": "countryCode"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_cases_death_output",
						"type": "DatasetReference"
					},
					"name": "deathsAndCasesSink"
				}
			],
			"transformations": [
				{
					"name": "eliminateColumns"
				},
				{
					"name": "europeOnly"
				},
				{
					"name": "countryCodeLookup"
				},
				{
					"name": "dedupColumns"
				},
				{
					"name": "pivotCount"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as short,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> sourceFileCaseDeaths\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countryCode\neuropeOnly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\treport_date = date,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> eliminateColumns\nsourceFileCaseDeaths filter(continent=='Europe') ~> europeOnly\neliminateColumns, countryCode lookup(eliminateColumns@country == countryCode@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> countryCodeLookup\ncountryCodeLookup select(mapColumn(\n\t\tcountry = eliminateColumns@country,\n\t\tcountry_code,\n\t\tpopulation = eliminateColumns@population,\n\t\tindicator,\n\t\tdaily_count,\n\t\treport_date,\n\t\tsource,\n\t\tcountry = countryCode@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tcontinent,\n\t\tpopulation = countryCode@population\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dedupColumns\ndedupColumns pivot(groupBy(country,\n\t\treport_date,\n\t\tsource,\n\t\tpopulation,\n\t\tcountry_code),\n\tpivotBy(indicator, ['confirmed cases', 'deaths']),\n\tcount_sum = sum(daily_count),\n\tcolumnNaming: '$N_$Vcount',\n\tlateral: true) ~> pivotCount\npivotCount select(mapColumn(\n\t\tcountry,\n\t\treport_date,\n\t\tsource,\n\t\treport_date,\n\t\tpopulation,\n\t\tcountry_code,\n\t\t{_confirmed_casescount} = {count_sum_confirmed casescount},\n\t\t{_deathscount} = count_sum_deathscount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> deathsAndCasesSink"
		}
	}
}